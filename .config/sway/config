### Header
include catppuccin-frappe
gaps inner 16px
default_border pixel 3px

font pango: Rubik Regular 12

### Variables
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term kitty
# Your preferred application launcher
set $menu wofi --show drun 

### Output configuration
output * bg ~/Downloads/mist_forest_frappe.jpg fill

### Idle configuration
exec swayidle -w \
         timeout 285 'swaylock --config ~/.config/swaylock/config.conf -f' \
         timeout 300 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
         before-sleep 'swaylock --config ~/.config/swaylock/config.conf -f'

### Extra Sleep Settings
# exec systemd-inhibit --what=handle-power-key sleep infinity
# bindsym XF86PowerOff exec 'swaylock --config ~/.config/swaylock/config.conf -f; systemctl suspend'
# bindswitch --reload --locked lid:on exec 'swaylock --config ~/.config/swaylock/config.conf -f; systemctl suspend'

### Input configuration
input "type:touchpad" {
  dwt enabled
  tap enabled
  natural_scroll enabled
  middle_emulation enabled
}

input "type:pointer" {
  accel_profile flat
}

input * xkb_numlock enable

input "type:keyboard" {
  xkb_layout us,eg
  xkb_options grp:win_space_toggle
}

### Key bindings
# Basics:
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
# Moving around:
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
# Workspaces:
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
# Scratchpad:
    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    bindsym $mod+minus scratchpad show
# Resizing containers:
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 30px
    bindsym $down resize grow height 30px
    bindsym $up resize shrink height 30px
    bindsym $right resize grow width 30px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 30px
    bindsym Down resize grow height 30px
    bindsym Up resize shrink height 30px
    bindsym Right resize grow width 30px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

include /etc/sway/config.d/*

# GNOME exec (polkit)
exec_always /usr/libexec/polkit-gnome-authentication-agent-1

#GNOME GTK
set $gnome-schema org.gnome.desktop.interface

seat seat0 xcursor_theme 'Bibata-Modern-Classic' 36

exec_always {
    gsettings set $gnome-schema gtk-theme 'Catppuccin-Frappe-Standard-Teal-dark'
    gsettings set $gnome-schema icon-theme 'WhiteSur'
    gsettings set $gnome-schema cursor-theme 'Bibata-Modern-Classic'
    gsettings set $gnome-schema cursor-size '36'
    gsettings set $gnome-schema font-name 'Rubik 12'
}

#catppuccin config
#target                  title     bg    text   indicator  border
client.focused           $blue     $base $text  $teal      $teal
client.focused_inactive  $overlay0 $base $text  $teal      $overlay0
client.unfocused         $overlay0 $base $text  $teal      $overlay0
client.urgent            $peach    $base $peach $overlay0  $peach
client.placeholder       $overlay0 $base $text  $overlay0  $overlay0
client.background        $base

# waybarr
bar {
  swaybar_command waybar
}

set $WOBSOCK $XDG_RUNTIME_DIR/wob.sock
exec rm -f $WOBSOCK && mkfifo $WOBSOCK && tail -f $WOBSOCK | wob

#grim (grimshot)
bindsym $mod+Shift+p exec grimshot save screen

#Audio/Brightness Key Bindings
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioStop exec playerctl pause
bindsym XF86AudioPrev exec playerctl previous
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioRaiseVolume exec pamixer --allow-boost --set-limit 150 -i 5 && pamixer --get-volume > $WOBSOCK
bindsym XF86AudioLowerVolume exec pamixer --allow-boost --set-limit 150 -d 5 && pamixer --get-volume > $WOBSOCK
bindsym XF86AudioMute exec pamixer --toggle-mute && ( [ "$(pamixer --get-mute)" = "true" ] && echo 0 > $WOBSOCK ) || pamixer --get-volume > $WOBSOCK
bindsym XF86MonBrightnessUp exec brightnessctl set 5%+ | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK
bindsym XF86MonBrightnessDown exec brightnessctl set 5%- | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK
